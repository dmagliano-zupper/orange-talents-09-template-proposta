# data source
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url= ${DATASOURCE_URL:jdbc:mysql://localhost:3306/proposta?serverTimezone=UTC}
spring.datasource.username=${MYSQL_USER:user}
spring.datasource.password=${MYSQL_PASSWORD:123456}
spring.datasource.initialization-mode=always

# jpa
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.defer-datasource-initialization=true

# url-feing
analise.proposta=${ANALISE_PROPOSTA_URL:http://localhost:9999/api/solicitacao}
cartoes.resource=${SERVICO_CARTOES_URL:localhost:8888/api/cartoes}
cartoes.bloqueio=${CARTOES_BLOQUEIO_URL:/{id}/bloqueios}

# actuator
management.endpoints.health.show-details=always
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:servico de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# loggin
loggin.level.root=TRACE


# Jaeger - Habilita ou nao
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviao
opentracing.jaeger.service-name=${NOME_DA_APLICACAO:servico de proposta}

# Jaeger - Endereco para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabilistico) e sua configuracao (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}


## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/logincartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/logincartao/protocol/openid-connect/certs}



